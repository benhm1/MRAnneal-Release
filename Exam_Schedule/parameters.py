

'''
parameters.py - Defines the parameters for a MRJob Approximation Framework
Instance.

Autogenerated by generate.py
Copyright [2015] [Benjamin Marks and Riley Collins]

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
'''

# How many reducers should run in parallel?
# Each reducer will evaluate some set of the 
# solutions.
numReducers = 5


# How many total candidate solutions should be
# yielded by a single reducer?
# Example: Yield 100 exam schedules
numSolnsYield = 10

# What's the maximum number of solutions that
# are yielded should be permutations of 
# one solution.
# Example: Yield at most 10 possible permutations 
#          of the same exam schedule course blocks.
#          This ensures that the overall set of yielded
#          solutions will contain some diversity.
numPerSubsol = 5


# How many rounds of annealing should run?
numRounds = 2

# How many starter solutions should be generated?
numSeedSolns = 1000

# How many times should we anneal each solution?
numAnnealCalls = 100

# How many solutions should be passed on to the next round of
# annealing?
topK = 50

# How many results should be returned at the end? 
numFinalResults = 5


